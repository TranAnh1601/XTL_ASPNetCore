@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService authorizationService

@{
    var result = await authorizationService.AuthorizeAsync(this.User, "ViewManageMenu"); // check quyen
}

@if (result.Succeeded)
{
    <!DOCTYPE html>
    <html>
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <style>
            .dropbtn {
                background-color: white;
                color: red;
                padding: 12px;
                font-size: 16px;
                border: none;
                cursor: pointer;
                border: 2px solid #DC143C;
            }

            /* .dropbtn:hover, .dropbtn:focus {
                            background-color: #2980B9;
                        }*/

            .dropdown {
                position: relative;
                display: inline-block;
            }

            .dropdown-content {
                display: none;
                position: absolute;
                background-color: #f1f1f1;
                min-width: 160px;
                overflow: auto;
                box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
                z-index: 1;
            }

                .dropdown-content a {
                    color: black;
                    padding: 12px 16px;
                    text-decoration: none;
                    display: block;
                }

            .dropdown a:hover {
                background-color: #ddd;
            }

            .show {
                display: block;
            }

        </style>

    </head>
    <body style="background-color:white;">
        <div class="dropdown">
            <button onclick="myFunction()" class="dropbtn">Manager</button>

            <div id="myDropdown" class="dropdown-content">
                <a asp-action="Index" asp-controller="Contacts" asp-area="Contact">Contact</a>
                <a asp-action="Index" asp-controller="Role" asp-area="Identity">Quan ly role</a>
                <a asp-action="Index" asp-controller="User" asp-area="Identity">Quan ly User</a>
                <a asp-action="Index" asp-controller="Role" asp-area="Identity">Quan ly Role</a>
                <a asp-action="Index" asp-controller="Categories" asp-area="Blog">Quan ly Blog</a>
                <a asp-action="Index" asp-controller="Posts" asp-area="Blog">Quan ly Post</a>
                <a asp-action="Index" asp-controller="CategoryProduct" asp-area="Product">Quan ly CategoryProduct</a>
                <a asp-action="Index" asp-controller="ManageProduct" asp-area="Product">Quan ly Product</a>
                <a target="_blank" asp-action="Index" asp-controller="FileManager" asp-area="Files">Quan ly File</a>
            </div>

        </div>

        <script>
            /* When the user clicks on the button,
            toggle between hiding and showing the dropdown content */
            function myFunction() {
                document.getElementById("myDropdown").classList.toggle("show");
            }

            // Close the dropdown if the user clicks outside of it
            window.onclick = function (event) {
                if (!event.target.matches('.dropbtn')) {
                    var dropdowns = document.getElementsByClassName("dropdown-content");
                    var i;
                    for (i = 0; i < dropdowns.length; i++) {
                        var openDropdown = dropdowns[i];
                        if (openDropdown.classList.contains('show')) {
                            openDropdown.classList.remove('show');
                        }
                    }
                }
            }
        </script>

    </body>
    </html>
}


